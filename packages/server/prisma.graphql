# source: https://us1.prisma.sh/colombini-c4ed8c/prisma-api-boilerplate/dev
# timestamp: Sat Nov 10 2018 12:26:40 GMT-0200 (-02)

type AggregatePopup {
  count: Int!
}

type BatchPayload {
  """The number of nodes that have been affected by the Batch operation."""
  count: Long!
}

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createPopup(data: PopupCreateInput!): Popup!
  updatePopup(data: PopupUpdateInput!, where: PopupWhereUniqueInput!): Popup
  deletePopup(where: PopupWhereUniqueInput!): Popup
  upsertPopup(where: PopupWhereUniqueInput!, create: PopupCreateInput!, update: PopupUpdateInput!): Popup!
  updateManyPopups(data: PopupUpdateManyMutationInput!, where: PopupWhereInput): BatchPayload!
  deleteManyPopups(where: PopupWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Popup implements Node {
  id: ID!
  URL: String!
  text: String!
}

"""A connection to a list of items."""
type PopupConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [PopupEdge]!
  aggregate: AggregatePopup!
}

input PopupCreateInput {
  URL: String!
  text: String!
}

"""An edge in a connection."""
type PopupEdge {
  """The item at the end of the edge."""
  node: Popup!

  """A cursor for use in pagination."""
  cursor: String!
}

enum PopupOrderByInput {
  id_ASC
  id_DESC
  URL_ASC
  URL_DESC
  text_ASC
  text_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type PopupPreviousValues {
  id: ID!
  URL: String!
  text: String!
}

type PopupSubscriptionPayload {
  mutation: MutationType!
  node: Popup
  updatedFields: [String!]
  previousValues: PopupPreviousValues
}

input PopupSubscriptionWhereInput {
  """Logical AND on all given filters."""
  AND: [PopupSubscriptionWhereInput!]

  """Logical OR on all given filters."""
  OR: [PopupSubscriptionWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PopupSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: PopupWhereInput
}

input PopupUpdateInput {
  URL: String
  text: String
}

input PopupUpdateManyMutationInput {
  URL: String
  text: String
}

input PopupWhereInput {
  """Logical AND on all given filters."""
  AND: [PopupWhereInput!]

  """Logical OR on all given filters."""
  OR: [PopupWhereInput!]

  """Logical NOT on all given filters combined by AND."""
  NOT: [PopupWhereInput!]
  id: ID

  """All values that are not equal to given value."""
  id_not: ID

  """All values that are contained in given list."""
  id_in: [ID!]

  """All values that are not contained in given list."""
  id_not_in: [ID!]

  """All values less than the given value."""
  id_lt: ID

  """All values less than or equal the given value."""
  id_lte: ID

  """All values greater than the given value."""
  id_gt: ID

  """All values greater than or equal the given value."""
  id_gte: ID

  """All values containing the given string."""
  id_contains: ID

  """All values not containing the given string."""
  id_not_contains: ID

  """All values starting with the given string."""
  id_starts_with: ID

  """All values not starting with the given string."""
  id_not_starts_with: ID

  """All values ending with the given string."""
  id_ends_with: ID

  """All values not ending with the given string."""
  id_not_ends_with: ID
  URL: String

  """All values that are not equal to given value."""
  URL_not: String

  """All values that are contained in given list."""
  URL_in: [String!]

  """All values that are not contained in given list."""
  URL_not_in: [String!]

  """All values less than the given value."""
  URL_lt: String

  """All values less than or equal the given value."""
  URL_lte: String

  """All values greater than the given value."""
  URL_gt: String

  """All values greater than or equal the given value."""
  URL_gte: String

  """All values containing the given string."""
  URL_contains: String

  """All values not containing the given string."""
  URL_not_contains: String

  """All values starting with the given string."""
  URL_starts_with: String

  """All values not starting with the given string."""
  URL_not_starts_with: String

  """All values ending with the given string."""
  URL_ends_with: String

  """All values not ending with the given string."""
  URL_not_ends_with: String
  text: String

  """All values that are not equal to given value."""
  text_not: String

  """All values that are contained in given list."""
  text_in: [String!]

  """All values that are not contained in given list."""
  text_not_in: [String!]

  """All values less than the given value."""
  text_lt: String

  """All values less than or equal the given value."""
  text_lte: String

  """All values greater than the given value."""
  text_gt: String

  """All values greater than or equal the given value."""
  text_gte: String

  """All values containing the given string."""
  text_contains: String

  """All values not containing the given string."""
  text_not_contains: String

  """All values starting with the given string."""
  text_starts_with: String

  """All values not starting with the given string."""
  text_not_starts_with: String

  """All values ending with the given string."""
  text_ends_with: String

  """All values not ending with the given string."""
  text_not_ends_with: String
}

input PopupWhereUniqueInput {
  id: ID
}

type Query {
  popups(where: PopupWhereInput, orderBy: PopupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Popup]!
  popup(where: PopupWhereUniqueInput!): Popup
  popupsConnection(where: PopupWhereInput, orderBy: PopupOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): PopupConnection!

  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
}

type Subscription {
  popup(where: PopupSubscriptionWhereInput): PopupSubscriptionPayload
}
